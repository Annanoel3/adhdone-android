name: Build & Sign Android (Gradle signing)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    # We'll run Gradle in android/, but create the keystore in the repo root
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Locate Android build-tools
        id: tools
        run: |
          set -e
          echo "Installed build-tools:"
          ls -1 "$ANDROID_HOME/build-tools" | sort -V
          BT="$ANDROID_HOME/build-tools/$(ls -1 "$ANDROID_HOME/build-tools" | sort -V | tail -n1)"
          echo "Using: $BT"
          echo "BUILD_TOOLS=$BT" >> $GITHUB_ENV

      # IMPORTANT: create/restore keystore at the REPO ROOT (.. relative to android/app)
      - name: Prepare keystore at repo root (release.keystore)
        shell: bash
        run: |
          set -e
          if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ]; then
            echo "Decoding existing keystore from secrets to repo root…"
            echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > release.keystore
            echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
            echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
            echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          else
            echo "No keystore secrets found. Creating a NEW keystore at repo root…"
# match your Gradle config exactly
KS_PASS="password"
KEY_PASS="password"
ALIAS="release"

keytool -genkeypair -v \
  -keystore release.keystore \
  -storepass "$KS_PASS" -keypass "$KEY_PASS" \
  -keyalg RSA -keysize 2048 -validity 10000 \
  -alias "$ALIAS" \
  -dname "CN=ADHDone,O=ADHDone,L=NA,ST=NA,C=US"

echo "KEYSTORE_PASSWORD=$KS_PASS" >> $GITHUB_ENV
echo "KEY_PASSWORD=$KEY_PASS"   >> $GITHUB_ENV
echo "KEY_ALIAS=$ALIAS"         >> $GITHUB_ENV

            base64 release.keystore > my-release.keystore.base64
            echo "========== SAVE THESE IN GITHUB SECRETS (one-time) =========="
            echo "KEYSTORE_PASSWORD=$KS_PASS"
            echo "KEY_PASSWORD=$KEY_PASS"
            echo "KEY_ALIAS=$ALIAS"
            echo "============================================================="
          fi
          echo "Placed keystore at: $(pwd)/release.keystore"
          ls -l release.keystore

      - name: Make Gradle wrapper executable
        working-directory: android
        run: chmod +x ./gradlew

      # Build SIGNED release; your gradle config points to file('../release.keystore')
      - name: Build signed release APK (Gradle)
        working-directory: android
        run: ./gradlew assembleRelease

      - name: Print signing certificate (SHA-256)
        working-directory: android
        run: |
          APK="app/build/outputs/apk/release/app-release.apk"
          if [ ! -f "$APK" ]; then
            echo "Signed APK not found at $APK. Listing outputs:"
            ls -R app/build/outputs/apk || true
            exit 1
          fi
          echo "----- SHA-256 digest (copy and remove colons for JSON) -----"
          "$BUILD_TOOLS/apksigner" verify --print-certs "$APK" | sed -n 's/.*SHA-256 digest: //p'

      - name: Upload APK (and keystore base64 if newly created)
        uses: actions/upload-artifact@v4
        with:
          name: ADHDone-build-output
          path: |
            android/app/build/outputs/apk/release/app-release.apk
            my-release.keystore.base64
          if-no-files-found: ignore
